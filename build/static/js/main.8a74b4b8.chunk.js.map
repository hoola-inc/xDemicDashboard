{"version":3,"sources":["components/common/Sidebar.js","components/ant-modal/CreateCourseModal.js","components/course/Course.js","components/ant-modal/CreateCourseInstanceModal.js","components/course/CourseDetail.js","components/ant-modal/SchoolRegisterModal.js","components/school/School.js","components/ant-modal/AddNewStudentModal.js","charts/CoursesChart.js","components/student/Student.js","charts/CredentialsChart.js","charts/SemesterChart.js","charts/StudentsChart.js","components/home/Home.js","App.js","serviceWorker.js","index.js"],"names":["Sider","SubMenu","Sidebar","state","collapsed","onCollapse","console","log","_this","setState","react_default","a","createElement","collapsible","this","className","menu","theme","defaultSelectedKeys","mode","Item","key","react_router_dom","to","icon","type","title","React","Component","RangePicker","onChangeDate","dates","dateStrings","CreateCourseModal","props","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","visible","loading","iconLoading","course_name","course_code","course_description","course_grading_schema","course_tags","course_issuer","course_allignment","showModal","handleOk","e","handleCancel","enterLoading","enterIconLoading","changeHandler","defineProperty","target","name","value","submitHandler","preventDefault","sendCourse","axios","post","course_obj","then","res","data","status","Swal","fire","catch","err","_this$state","es_button","style","float","onClick","modal","onOk","onCancel","es_form","onSubmit","label","input","placeholder","allowClear","onChange","ranges","Today","moment","This Month","startOf","endOf","ghost","Header","Footer","columns","dataIndex","render","text","Course","courseDataArray","getAllCourses","newArray","get","map","push","_id","courseArray","message","handleChildFunc","_this2","layout","minHeight","common_Sidebar","background","padding","ant_modal_CreateCourseModal","table","dataSource","pagination","pageSize","onRow","record","rowIndex","event","history","pathname","detail","myFunc","textAlign","href","CourseDetil","tableData","courseDetailData","location","anArray","CourseDetail_Header","row","gutter","col","span","card","bordered","marginTop","margin","list","size","header","footer","renderItem","item","SchoolModal","TextArea","address","email","subjectWebpage","agentSectorType","agentType","description","createNewSchool","changehandler","htmlType","SchoolRegisterModal","create","age","School","expand","School_Header","ant_modal_SchoolRegisterModal","School_Footer","AddNewStudentModal","AddNewStudent","dob","phone","Student","Student_Header","ant_modal_AddNewStudentModal","Student_Footer","CredentialsChart","BizCharts","height","year","sales","scale","tickInterval","forceFit","crosshairs","position","SemesterChart","dv","DataSet","createView","source","profession","highest","minimum","mean","transform","callback","range","transpose","offset","$","ajax","url","async","success","iData","CoursesChart","field","binWidth","groupBy","as","grid","lineStyle","stroke","lineWidth","lineDash","inPlot","color","StudentChart","x","y","Home","Home_Header","StudentsChart","charts_CoursesChart","charts_CredentialsChart","charts_SemesterChart","font","Home_Footer","App","react_router","path","exact","component","CourseDetail","Boolean","window","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8a74b4b8.chunk.js","sourcesContent":["import React from 'react';\nimport { Layout, Menu, Icon } from 'antd';\nimport { Link } from 'react-router-dom';\nconst { Sider } = Layout;\nconst { SubMenu } = Menu;\n\nclass Sidebar extends React.Component {\n    state = {\n        collapsed: false\n    };\n\n    onCollapse = collapsed => {\n        console.log(collapsed);\n        this.setState({ collapsed });\n    };\n\n    render() {\n        return (\n            <Sider collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse}>\n                <div className=\"logo\"> \n                    Logo\n                </div>\n                <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n                    <Menu.Item key=\"/\">\n                        <Link to=\"/\">\n                            <Icon type=\"pie-chart\" />\n                            <span>Home</span>\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"/school\">\n                        <Link to=\"/school\">\n                            <Icon type=\"desktop\" />\n                            <span>School</span>\n                        </Link>\n                    </Menu.Item>\n\n                    <Menu.Item key=\"/student\">\n                        <Link to=\"/student\">\n                            <Icon type=\"user\"></Icon>\n                            <span>Student</span>\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"/home\">\n                        <Link to=\"/course\">\n                            <Icon type=\"user\"></Icon>\n                            <span>Courses</span>\n                        </Link>\n                    </Menu.Item>\n\n                    {/* <SubMenu\n                        key=\"sub1\"\n                        title={\n                            <span>\n                                <Icon type=\"user\" />\n                                <span>Student</span>\n                            </span>\n                        }\n                    >\n                        <Menu.Item key=\"3\">Tom</Menu.Item>\n                        <Menu.Item key=\"4\">Bill</Menu.Item>\n                        <Menu.Item key=\"5\">Alex</Menu.Item>\n                    </SubMenu> */}\n                    <SubMenu\n                        key=\"sub2\"\n                        title={\n                            <span>\n                                <Icon type=\"team\" />\n                                <span>Team</span>\n                            </span>\n                        }\n                    >\n                        <Menu.Item key=\"6\">Team 1</Menu.Item>\n                        <Menu.Item key=\"8\">Team 2</Menu.Item>\n                    </SubMenu>\n                    <Menu.Item key=\"9\">\n                        <Icon type=\"file\" />\n                        <span>File</span>\n                    </Menu.Item>\n                </Menu>\n            </Sider>\n        );\n    }\n}\n\nexport default Sidebar;","import React from 'react';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport { Modal, Button, Input, Form, DatePicker } from 'antd';\nimport moment from 'moment';\n\nconst { RangePicker } = DatePicker;\n\nfunction onChangeDate(dates, dateStrings) {\n    console.log('From: ', dates[0], ', to: ', dates[1]);\n    console.log('From: ', dateStrings[0], ', to: ', dateStrings[1]);\n}\n\nclass CreateCourseModal extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n    state = {\n        visible: false,\n        loading: false,\n        iconLoading: false,\n        course_name: '',\n        course_code: '',\n        course_description: '',\n        course_grading_schema: '',\n        course_tags: '',\n        course_issuer: '',\n        course_allignment: ''\n    };\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    enterLoading = () => {\n        this.setState({ loading: true });\n    };\n\n    enterIconLoading = () => {\n        this.setState({ iconLoading: true });\n    };\n\n    changeHandler = e => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    submitHandler = e => {\n        e.preventDefault();\n        this.enterLoading();\n        this.sendCourse();\n    }\n\n    sendCourse = () => {\n        axios.post('https://xdemic-badger-service.herokuapp.com/course', this.state.course_obj)\n            .then(res => {\n                if (res.data.status) {\n                    this.setState({ loading: false });\n                    Swal.fire('Course', 'created and live on url', 'success');\n                }\n                else {\n                    Swal.fire('Oho...', 'Something went wrong!', 'error');\n                }\n            })\n            .catch(err => {\n                Swal.fire('Error', 'An error occured', 'error');\n            });\n    }\n\n    render() {\n        const { course_name, course_code, course_description, course_grading_schema, course_tags, course_issuer, course_allignment } = this.state;\n\n        return (\n            <div>\n                <Button type=\"primary\" style={{ float: \"right\" }} onClick={this.showModal}>\n                    New Course\n        </Button>\n                <Modal\n                    title=\"Enter Course Detail\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                >\n                    <Form onSubmit={this.submitHandler}>\n                        <Form.Item label=\"Course Name\">\n                            <Input\n                                placeholder=\"enter course name\"\n                                allowClear\n                                name=\"course_name\"\n                                value={course_name}\n                                onChange={this.changeHandler}\n                            />\n                        </Form.Item>\n\n                        <Form.Item label=\"Course Code\">\n                            <Input\n                                placeholder=\"enter course code\"\n                                allowClear\n                                name=\"course_code\"\n                                value={course_code}\n                                onChange={this.changeHandler} />\n                        </Form.Item>\n\n                        <Form.Item label=\"Course Description\">\n                            <Input\n                                placeholder=\"enter course description\"\n                                allowClear\n                                name=\"course_description\"\n                                value={course_description}\n                                onChange={this.changeHandler}\n                            />\n                        </Form.Item>\n\n                        <Form.Item label=\"Course Grading Schema\">\n                            <Input\n                                placeholder=\"enter course grading schema\"\n                                allowClear\n                                name=\"course_grading_schema\"\n                                value={course_grading_schema}\n                                onChange={this.changeHandler}\n                            />\n                        </Form.Item>\n\n                        <Form.Item label=\"Course Tags\">\n                            <Input\n                                placeholder=\"enter course tags\"\n                                allowClear\n                                name=\"course_tags\"\n                                value={course_tags}\n                                onChange={this.changeHandler} />\n                        </Form.Item>\n\n                        <Form.Item label=\"Course Issuer\">\n                            <Input\n                                placeholder=\"enter course issuer\"\n                                allowClear\n                                name=\"course_issuer\"\n                                value={course_issuer}\n                                onChange={this.changeHandler} />\n                        </Form.Item>\n\n                        <Form.Item label=\"Course Alignment\">\n                            <Input\n                                placeholder=\"enter course alignment\"\n                                allowClear\n                                name=\"course_allignment\"\n                                value={course_allignment}\n                                onChange={this.changeHandler} />\n                        </Form.Item>\n\n                        <Form.Item label=\"Select Date\">\n                            <RangePicker\n                                ranges={{\n                                    Today: [moment(), moment()],\n                                    'This Month': [moment().startOf('month'), moment().endOf('month')],\n                                }}\n                                onChange={onChangeDate}\n                            />\n                        </Form.Item>\n\n                        <Button type=\"primary\" loading={this.state.loading} onClick={this.submitHandler} ghost >\n                            Submit\n                    </Button>\n\n                    </Form>\n                </Modal>\n            </div>\n\n        );\n    }\n}\n\nexport default CreateCourseModal;","import React from 'react';\nimport axios from 'axios';\nimport { Layout, Table } from 'antd';\nimport Swal from 'sweetalert2';\nimport Sidebar from '../common/Sidebar';\nimport CreateCourseModal from '../ant-modal/CreateCourseModal';\n\nconst { Header, Footer } = Layout;\n\n\n\n\nconst columns = [\n    {\n        title: 'Course Name',\n        dataIndex: 'course_name',\n        key: 'name',\n        render: text => <a>{text}</a>,\n    },\n    {\n        title: 'Course Code',\n        dataIndex: 'course_code',\n        key: 'address',\n    },\n    {\n        title: 'Course Tags',\n        key: 'tags',\n        dataIndex: 'course_tags',\n        // render: tags => (\n        //     <span>\n        //         {tags.map(tag => {\n        //             let color = tag.length > 5 ? 'geekblue' : 'green';\n        //             if (tag === 'loser') {\n        //                 color = 'pink';\n        //             }\n        //             return (\n        //                 <Tag color={color} key={tag}>\n        //                     {tag.toUpperCase()}\n        //                 </Tag>\n        //             );\n        //         })}\n        //     </span>\n        // ),\n    },\n    {\n        title: 'Course Url',\n        key: 'url',\n        dataIndex: 'course_url'\n    },\n];\n\nclass Course extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            courseArray: []\n        }\n    }\n\n    courseDataArray = [];\n\n    componentDidMount() {\n        this.getAllCourses();\n    }\n\n    getAllCourses = () => {\n        let newArray = [];\n        axios.get('https://xdemic-badger-service.herokuapp.com/course')\n            .then(res => {\n                this.courseDataArray = res.data.data;\n                res.data.data.map(e => {\n                    newArray.push({\n                        key: e._id,\n                        course_name: e.course_name,\n                        course_code: e.course_code,\n                        course_tags: e.course_tags\n                    })\n                });\n                if (res.data.status) {\n                    this.setState({\n                        courseArray: newArray\n                    });\n                    console.log(this.state.courseArray);\n                    \n                }\n                else {\n                    console.log('else');\n                    Swal.fire('Oho...', 'Something went wrong!', 'error');\n                }\n            })\n            .catch(err => {\n                Swal.fire('Error', err.message, 'error');\n            });\n    }\n\n    handleChildFunc = () => {\n        return '5d64f9e2223623390250c8e1';\n    }\n\n    render() {\n        return (\n            <Layout style={{ minHeight: '100vh' }}>\n                <Sidebar />\n                <Layout>\n                    \n                    <Header style={{ background: '#fff', padding: 0 }} />\n                    <CreateCourseModal />\n                    <Table  columns={columns} dataSource={this.state.courseArray} pagination={{ pageSize: 50 }} onRow={(record, rowIndex) => {\n                        return {\n                            onClick: event => { this.props.history.push({\n                                pathname: '/coursedetail',\n                                state: { detail: this.courseDataArray[rowIndex]}\n                            }) }\n                        };\n                    }} myFunc={this.handleChildFunc}>\n                    </Table>\n                    <Footer style={{ textAlign: 'center' }}>Hoola Tech ©2019</Footer>\n                </Layout>\n            </Layout>\n        );\n    }\n}\n\nexport default Course;","import React from 'react';\nimport { Modal, Button, Form, Input, DatePicker } from 'antd';\nimport moment from 'moment';\n\n\nconst { RangePicker } = DatePicker;\n\nfunction onChangeDate(dates, dateStrings) {\n    console.log('From: ', dates[0], ', to: ', dates[1]);\n    console.log('From: ', dateStrings[0], ', to: ', dateStrings[1]);\n}\n\nclass CreateCourseInstanceModal extends React.Component {\n    state = { visible: false };\n    constructor(props) {\n        super(props);\n    }\n    state = { visible: false };\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n    render() {\n        return (\n            <div>\n                <Button type=\"primary\" onClick={this.showModal}>\n                    Create New Course Instance\n        </Button>\n                <Modal\n                    title=\"Basic Modal\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                >\n                    <Form>\n                        <Form.Item label=\"Course Name\">\n                            <Input\n                                placeholder=\"enter course name\"\n                                allowClear />\n                        </Form.Item>\n\n                        <Form.Item label=\"Course Code\">\n                            <Input\n                                placeholder=\"enter course code\"\n                                allowClear />\n                        </Form.Item>\n\n                        <Form.Item label=\"Course Description\">\n                            <Input\n                                placeholder=\"enter course description\"\n                                allowClear />\n                        </Form.Item>\n\n                        <Form.Item label=\"Course Grading Schema\">\n                            <Input\n                                placeholder=\"enter course grading schema\"\n                                allowClear />\n                        </Form.Item>\n\n                        <Form.Item label=\"Course Tags\">\n                            <Input\n                                placeholder=\"enter course tags\"\n                                allowClear />\n                        </Form.Item>\n\n                        <Form.Item label=\"Course Issuer\">\n                            <Input\n                                placeholder=\"enter course issuer\"\n                                allowClear />\n                        </Form.Item>\n\n                        <Form.Item label=\"Course Alignment\">\n                            <Input\n                                placeholder=\"enter course allignment\"\n                                allowClear />\n                        </Form.Item>\n\n                        <Form.Item label=\"Course Name\">\n                            <Input\n                                placeholder=\"enter course tags\"\n                                allowClear />\n                        </Form.Item>\n\n                        <Form.Item label=\"Select Date\">\n                            <RangePicker\n                                ranges={{\n                                    Today: [moment(), moment()],\n                                    'This Month': [moment().startOf('month'), moment().endOf('month')],\n                                }}\n                                onChange={onChangeDate}\n                            />\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default CreateCourseInstanceModal; ","import React from 'react';\nimport Sidebar from '../common/Sidebar';\nimport { Layout, Table, Tag, Row, Col, Card, List, Typography } from 'antd';\nimport CreateCourseInstanceModal from '../ant-modal/CreateCourseInstanceModal'\n\nconst { Header, Footer } = Layout;\n\n\nconst data = [\n    'Racing car sprays burning fuel into crowd.',\n    'Japanese princess to wed commoner.',\n    'Australian walks 100km after outback crash.',\n    'Man charged over missing wedding girl.',\n    'Los Angeles battles huge wildfires.',\n];\n\nconst columns = [\n    {\n        title: 'Course Name',\n        dataIndex: 'course_name',\n        key: 'name',\n        render: text => <a>{text}</a>,\n    },\n    {\n        title: 'Course Code',\n        dataIndex: 'course_code',\n        key: 'address',\n    },\n    {\n        title: 'Course Tags',\n        key: 'course_tags',\n        dataIndex: 'course_tags',\n        // render: tags => (\n        //     <span>\n        //         {tags.map(tag => {\n        //             let color = tag.length > 5 ? 'geekblue' : 'green';\n        //             if (tag === 'loser') {\n        //                 color = 'pink';\n        //             }\n        //             return (\n        //                 <Tag color={color} key={tag}>\n        //                     {tag.toUpperCase()}\n        //                 </Tag>\n        //             );\n        //         })}\n        //     </span>\n        // )\n    },\n    {\n        title: 'Course Description',\n        key: 'course',\n        dataIndex: 'course_description'\n    },\n    {\n        title: 'Course Grading Schema',\n        key: 'course',\n        dataIndex: 'course_grading_schema'\n    },\n    {\n        title: 'Course Issuer',\n        key: 'course',\n        dataIndex: 'course_issuer'\n    },\n    {\n        title: 'Course Allignment',\n        key: 'course',\n        dataIndex: 'course_allignment'\n    },\n    {\n        title: 'Course Url',\n        key: 'url',\n        dataIndex: 'url',\n        render: (text, record) => (\n            <span>\n\n                <a href='https://xdemic-badger-service.herokuapp.com/newcourse'> Course URL</a>\n            </span>\n        )\n    }\n];\n\n\n\nclass CourseDetil extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            anArray: []\n        }\n    }\n\n    componentDidMount() {\n        this.tableData();\n    }\n\n    tableData = () => {\n        let courseDetailData = [];\n        courseDetailData.push({\n            key: 1,\n            course_name: this.props.location.state.detail.course_name,\n            course_code: this.props.location.state.detail.course_code,\n            course_tags: this.props.location.state.detail.course_tags,\n            course_description: this.props.location.state.detail.course_description,\n            course_grading_schema: this.props.location.state.detail.course_grading_schema,\n            course_issuer: this.props.location.state.detail.course_issuer,\n            course_allignment: this.props.location.state.detail.course_allignment\n        });\n        this.setState({\n            anArray: courseDetailData\n        })\n    }\n\n    render() {\n        return (\n            // <Layout style={{ minHeight: '100vh' }}>\n            //     <Sidebar />\n            //     <Layout>\n            //         <Header style={{ background: '#fff', padding: 0 }} />\n            //         <CreateCourseInstanceModal />\n            //         <Table columns={columns} dataSource={this.state.anArray} onRow={(record, rowIndex) => {\n            //             return {\n            //                 onClick: event => { }\n            //             };\n            //         }}>\n            //         </Table>\n            //         <Footer style={{ textAlign: 'center' }}>Hoola Tech ©2019</Footer>\n            //     </Layout>\n\n            // </Layout>\n            <div>\n                <Layout style={{ minHeight: '100vh' }}>\n                    <Sidebar />\n                    <Layout>\n                        <Header style={{ background: '#fff', padding: 0 }} />\n                        <div style={{ background: '#ECECEC', padding: '30px' }}>\n                            <Row gutter={16}>\n                                <Col span={24}>\n                                    <Card title=\"Card Detail\" bordered={false}>\n                                        <Table columns={columns} dataSource={this.state.anArray} onRow={(record, rowIndex) => {\n                                            return {\n                                                onClick: event => { }\n                                            };\n                                        }} pagination={false} >\n                                        </Table>\n                                    </Card>\n                                </Col>\n                            </Row>\n                        </div>\n\n                        <div style={{ background: '#ECECEC', padding: '30px', marginTop: \"20px\" }}>\n                            <Row gutter={16}>\n                                <Col span={8}>\n                                    <Card title=\"Card Instance\" bordered={false}>\n                                        Course Detail\n        </Card>\n                                </Col>\n                                <Col span={8}>\n                                    <Card title=\"Card Instance\" bordered={false}>\n                                        Course Detail\n        </Card>\n                                </Col>\n                                <Col span={8}>\n                                    <Card title=\"Card Instance\" bordered={false}>\n                                        Course Detail\n        </Card>\n                                </Col>\n                            </Row>\n                        </div>\n\n                        <div style={{ background: '#ECECEC', padding: '30px', marginTop: \"20px\" }}>\n                            <Row gutter={16}>\n                                <Col span={8}>\n                                    <h3 style={{ margin: '16px 0' }}>Small Size</h3>\n                                    <List\n                                        size=\"small\"\n                                        header={<div>Header</div>}\n                                        footer={<div>Footer</div>}\n                                        bordered\n                                        dataSource={data}\n                                        renderItem={item => <List.Item>{item}</List.Item>}\n                                    />\n                                </Col>\n                                <Col span={8}>\n                                    <h3 style={{ margin: '16px 0' }}>Small Size</h3>\n                                    <List\n                                        size=\"small\"\n                                        header={<div>Header</div>}\n                                        footer={<div>Footer</div>}\n                                        bordered\n                                        dataSource={data}\n                                        renderItem={item => <List.Item>{item}</List.Item>}\n                                    />\n                                </Col>\n                                <Col span={8}>\n                                    <h3 style={{ margin: '16px 0' }}>Small Size</h3>\n                                    <List\n                                        size=\"small\"\n                                        header={<div>Header</div>}\n                                        footer={<div>Footer</div>}\n                                        bordered\n                                        dataSource={data}\n                                        renderItem={item => <List.Item>{item}</List.Item>}\n                                    />\n                                </Col>\n                            </Row>\n                        </div>\n\n\n                    </Layout>\n                </Layout>\n            </div>\n        );\n    }\n}\n\nexport default CourseDetil;","import React from 'react';\nimport { Modal, Button, Form, Input, DatePicker } from 'antd';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\n\nconst { TextArea } = Input;\n\nclass SchoolModal extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    state = {\n        visible: false,\n        name: '',\n        address: '',\n        email: '',\n        subjectWebpage: '',\n        agentSectorType: '',\n        agentType: '',\n        description: ''\n    };\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n    changeHandler = e => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    submitHandler = e => {\n        e.preventDefault();\n        this.createNewSchool();\n    }\n\n    createNewSchool = () => {\n        axios.post('https://xdemic-badger-service.herokuapp.com/school', this.state)\n            .then(res => {\n                if (res.data.status) {\n                    Swal.fire('Course', 'created and live on url', 'success');\n                }\n                else {\n                    Swal.fire('Oho...', 'Something went wrong!', 'error');\n                }\n            })\n            .catch(err => {\n                Swal.fire('Error', 'An error occured', 'error');\n            });\n    }\n\n    render() {\n\n        const { name, address, email, subjectWebpage, agentSectorType, agentType, description } = this.state;\n\n        return (\n            <div>\n                <Button type=\"primary\" onClick={this.showModal}>\n                    Create New Course Instance\n        </Button>\n                <Modal\n                    title=\"Basic Modal\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                >\n                    <Form onSubmit={this.submitHandler}>\n                        <Form.Item label=\"School Name\">\n                            <Input\n                                placeholder=\"enter school name\"\n                                name=\"name\"\n                                value={name}\n                                onChange={this.changehandler}\n                                allowClear\n                            />\n                        </Form.Item>\n\n                        {/* <Form.Item label=\"School Address\">\n                            <Input\n                                placeholder=\"enter school address\"\n                                name=\"address\"\n                                value={address}\n                                onChange={this.changehandler}\n                            />\n                        </Form.Item>\n\n                        <Form.Item label=\"School Email\">\n                            <Input\n                                placeholder=\"enter school email\"\n                                name=\"email\"\n                                value={email}\n                                onChange={this.changehandler}\n                            />\n                        </Form.Item>\n\n                        <Form.Item label=\"School Subject Webpage\">\n                            <Input\n                                placeholder=\"school subject web page\"\n                                name=\"subjectWebpage\"\n                                value={subjectWebpage}\n                                onChange={this.changehandler}\n                            />\n                        </Form.Item>\n\n                        <Form.Item label=\"School Agent Sector Type\">\n                            <Input\n                                placeholder=\"enter agent sector type\"\n                                name=\"agentSectorType\"\n                                value={agentSectorType}\n                                onChange={this.changehandler}\n                            />\n                        </Form.Item>\n\n                        <Form.Item label=\"School Agent Type\">\n                            <Input\n                                placeholder=\"enter agent type\"\n                                name=\"agentType\"\n                                value={agentType}\n                                onChange={this.changehandler}\n                            />\n                        </Form.Item>\n\n                        <Form.Item label=\"School Description\">\n                            <TextArea rows={4}\n                                placeholder=\"enter school description\"\n                                name=\"description\"\n                                value={description}\n                                onChange={this.changehandler}\n                            />\n                        </Form.Item> */}\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" onClick={this.submitHandler}>\n                                Submit\n                            </Button>\n                        </Form.Item>\n\n                    </Form>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nconst SchoolRegisterModal = Form.create()(SchoolModal);\n\nexport default SchoolRegisterModal; ","import React from 'react';\nimport { Layout, Table, Form, Row, Col, Input, Button, Icon } from 'antd';\nimport Sidebar from '../common/Sidebar';\nimport SchoolRegisterModal from '../ant-modal/SchoolRegisterModal';\n\nconst { Header, Footer } = Layout;\n\nconst dataSource = [\n    {\n        key: '1',\n        name: 'Yo',\n        age: 'Bakers Street London',\n        address: 'hamza@gmail.com',\n    },\n    {\n        key: '2',\n        name: 'Man',\n        age: 'Bakers Street London',\n        address: 'khan@gmail.com',\n    },\n];\n\nconst columns = [\n    {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n    },\n    {\n        title: 'Address',\n        dataIndex: 'age',\n        key: 'age',\n    },\n    {\n        title: 'Email',\n        dataIndex: 'address',\n        key: 'address',\n    },\n];\n\nclass School extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    state = {\n        expand: false\n    };\n\n    render() {\n        return (\n            <Layout style={{ minHeight: '100vh' }}>\n                <Sidebar {...this.props} />\n\n                <Layout>\n                    <Header style={{ background: '#fff', padding: 0 }} />\n                    <SchoolRegisterModal {...this.props} />\n\n                    <Table dataSource={dataSource} columns={columns} />;\n\n                    <Footer style={{ textAlign: 'center' }}>Hoola Tech ©2019</Footer>\n                </Layout>\n\n            </Layout>\n        );\n    }\n}\n\nexport default School;","import React from 'react';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport { Modal, Button, Input, Form, DatePicker } from 'antd';\nimport moment from 'moment';\n\nconst { RangePicker } = DatePicker;\n\nfunction onChangeDate(dates, dateStrings) {\n    console.log('From: ', dates[0], ', to: ', dates[1]);\n    console.log('From: ', dateStrings[0], ', to: ', dateStrings[1]);\n}\n\nclass AddNewStudentModal extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n    state = {\n        visible: false,\n        loading: false,\n        iconLoading: false,\n        email: '',\n    };\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    enterLoading = () => {\n        this.setState({ loading: true });\n    };\n\n    enterIconLoading = () => {\n        this.setState({ iconLoading: true });\n    };\n\n    changeHandler = e => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    submitHandler = e => {\n        e.preventDefault();\n        this.enterLoading();\n        this.sendCourse();\n    }\n\n    sendCourse = () => {\n        axios.post('https://xdemic-api.herokuapp.com/email', this.state)\n            .then(res => {\n                if (res.data.status) {\n                    this.setState({ loading: false });\n                    Swal.fire('Success', 'Email Sent', 'success');\n                    this.handleCancel();\n                }\n                else {\n                    Swal.fire('Oho...', 'Something went wrong!', 'error');\n                    this.handleCancel();\n                    this.setState({ loading: false })\n                }\n            })\n            .catch(err => {\n                Swal.fire('Error', 'An error occured', 'error');\n            });\n    }\n\n    render() {\n        const { email } = this.state;\n\n        return (\n            <div>\n                <Button type=\"primary\" style={{ float: \"right\" }} onClick={this.showModal}>\n                    Add New Student\n        </Button>\n                <Modal\n                    title=\"Enter Course Detail\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                >\n                    <Form onSubmit={this.submitHandler}>\n                        <Form.Item label=\"Student Email\">\n                            <Input\n                                placeholder=\"enter student email\"\n                                allowClear\n                                name=\"email\"\n                                value={email}\n                                onChange={this.changeHandler}\n                            />\n                        </Form.Item>\n\n\n                        <Button type=\"primary\" loading={this.state.loading} onClick={this.submitHandler} ghost >\n                            Submit\n                    </Button>\n\n                    </Form>\n                </Modal>\n            </div>\n\n        );\n    }\n}\n\n\n\nconst AddNewStudent = Form.create()(AddNewStudentModal);\n\nexport default AddNewStudent; ","import $ from \"jquery\";\nimport React from \"react\";\nimport {\n    G2,\n    Chart,\n    Geom,\n    Axis,\n    Tooltip,\n    Coord,\n    Label,\n    Legend,\n    View,\n    Guide,\n    Shape,\n    Facet,\n    Util\n} from \"bizcharts\";\nimport DataSet from \"@antv/data-set\";\n\nlet data;\n$.ajax({\n    url: \"https://alifd.alibabausercontent.com/materials/@bizcharts/bar-histogram-stacked/0.3.1/build/mock.json\",\n    async: false,\n    success: (iData) => { data = iData }\n});\n\nclass CoursesChart extends React.Component {\n    render() {\n        const ds = new DataSet();\n        const dv = ds.createView().source(data);\n        dv.transform({\n            type: \"bin.histogram\",\n            field: \"depth\",\n            binWidth: 1,\n            // offset: -0.3,\n            groupBy: [\"cut\"],\n            as: [\"depth\", \"count\"]\n        });\n        return (\n            <div>\n                <Chart height={400} data={dv} forceFit>\n                    <Legend />\n                    <Axis\n                        name=\"depth\"\n                        grid={{\n                            lineStyle: {\n                                stroke: \"#d9d9d9\",\n                                lineWidth: 1,\n                                lineDash: [2, 2]\n                            }\n                        }}\n                    />\n                    <Axis name=\"count\" />\n                    <Tooltip inPlot={false} crosshairs={false} position={\"top\"} />\n                    <Geom type=\"intervalStack\" position=\"depth*count\" color=\"cut\" />\n                </Chart>\n            </div>\n        );\n    }\n}\n\nexport default CoursesChart;","import React from 'react';\nimport Sidebar from '../common/Sidebar';\nimport { Layout, Table, Form, Row, Col, Input, Button, Icon } from 'antd';\nimport  AddNewStudent  from '../ant-modal/AddNewStudentModal';\n\nconst { Header, Footer } = Layout;\n\nconst dataSource = [\n    {\n        key: '1',\n        name: 'Yo',\n        dob: '1 jan 1990',\n        phone: '0345 5555555',\n        email: 'hamza@gmail.com'\n    }\n];\n\nconst columns = [\n    {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n    },\n    {\n        title: 'Date of birth',\n        dataIndex: 'dob',\n        key: 'age',\n    },\n    {\n        title: 'Phone',\n        dataIndex: 'phone',\n        key: '',\n    },\n    {\n        title: 'Email',\n        dataIndex: 'email',\n        key: ''\n    }\n];\n\n\nclass Student extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Layout style={{ minHeight: '100vh' }}>\n                <Sidebar />\n                <Layout>\n                    \n                    <Header style={{ background: '#fff', padding: 0 }} />\n                    <AddNewStudent />\n                    <Table dataSource={dataSource} columns={columns} pagination={false} />;\n\n                    <Footer style={{ textAlign: 'center' }}>Hoola Tech ©2019</Footer>\n                </Layout>\n            </Layout>\n        );\n    }\n}\n\nexport default Student;","import React from \"react\";\nimport {\n    G2,\n    Chart,\n    Geom,\n    Axis,\n    Tooltip,\n    Coord,\n    Label,\n    Legend,\n    View,\n    Guide,\n    Shape,\n    Facet,\n    Util\n} from \"bizcharts\";\n\nclass CredentialsChart extends React.Component {\n    render() {\n        const data = [\n            {\n                year: \"1951 年\",\n                sales: 38\n            },\n            {\n                year: \"1952 年\",\n                sales: 52\n            },\n            {\n                year: \"1956 年\",\n                sales: 61\n            },\n            {\n                year: \"1957 年\",\n                sales: 145\n            },\n            {\n                year: \"1958 年\",\n                sales: 48\n            },\n            {\n                year: \"1959 年\",\n                sales: 38\n            },\n            {\n                year: \"1960 年\",\n                sales: 38\n            },\n            {\n                year: \"1962 年\",\n                sales: 38\n            }\n        ];\n        const cols = {\n            sales: {\n                tickInterval: 20\n            }\n        };\n        return (\n            <div>\n                <Chart height={400} data={data} scale={cols} forceFit>\n                    <Axis name=\"year\" />\n                    <Axis name=\"sales\" />\n                    <Tooltip\n                        crosshairs={{\n                            type: \"y\"\n                        }}\n                    />\n                    <Geom type=\"interval\" position=\"year*sales\" />\n                </Chart>\n            </div>\n        );\n    }\n}\n\n\nexport default CredentialsChart;\n","import React from 'react';\nimport {\n    Chart,\n    Geom,\n    Axis,\n    Tooltip,\n    Coord,\n} from 'bizcharts';\nimport DataSet from '@antv/data-set';\n\nclass SemesterChart extends React.Component {\n    render() {\n        const data = [\n            {\n                profession: '两年制副学士学位',\n                highest: 110000,\n                minimum: 23000,\n                mean: 56636,\n            },\n            {\n                profession: '执法与救火',\n                highest: 120000,\n                minimum: 18000,\n                mean: 66625,\n            },\n            {\n                profession: '教育学',\n                highest: 125000,\n                minimum: 24000,\n                mean: 72536,\n            },\n            {\n                profession: '心理学',\n                highest: 130000,\n                minimum: 22500,\n                mean: 75256,\n            },\n            {\n                profession: '计算机科学',\n                highest: 131000,\n                minimum: 23000,\n                mean: 77031,\n            },\n        ];\n        const ds = new DataSet();\n        const dv = ds.createView().source(data);\n        dv.transform({\n            type: 'map',\n\n            callback(row) {\n                // 加工数据后返回新的一行，默认返回行数据本身\n                row.range = [row.minimum, row.highest];\n                return row;\n            },\n        });\n        return (\n            <div>\n                <Chart height={400} data={dv} padding={[20, 80, 50, 110]} forceFit>\n                    <Coord transpose />\n                    <Axis\n                        name=\"profession\"\n                        label={{\n                            offset: 12,\n                        }}\n                    />\n                    <Axis name=\"range\" />\n                    <Tooltip />\n                    <Geom type=\"interval\" position=\"profession*range\" />\n                </Chart>\n            </div>\n        );\n    }\n}\n\nexport default SemesterChart;\n","import React from \"react\";\nimport {\n    G2,\n    Chart,\n    Geom,\n    Axis,\n    Tooltip,\n    Coord,\n    Label,\n    Legend,\n    View,\n    Guide,\n    Shape,\n    Facet,\n    Util\n} from \"bizcharts\";\n\nclass StudentChart extends React.Component {\n    render() {\n        const data = [\n            {\n                x: \"分类一\",\n                y: [76, 100]\n            },\n            {\n                x: \"分类二\",\n                y: [56, 108]\n            },\n            {\n                x: \"分类三\",\n                y: [38, 129]\n            },\n            {\n                x: \"分类四\",\n                y: [58, 155]\n            },\n            {\n                x: \"分类五\",\n                y: [45, 120]\n            },\n            {\n                x: \"分类六\",\n                y: [23, 99]\n            },\n            {\n                x: \"分类七\",\n                y: [18, 56]\n            },\n            {\n                x: \"分类八\",\n                y: [18, 34]\n            }\n        ];\n        return (\n            <div>\n                <Chart height={400} data={data} forceFit>\n                    <Axis name=\"x\" />\n                    <Axis name=\"y\" />\n                    <Tooltip />\n                    <Geom type=\"interval\" position=\"x*y\" />\n                </Chart>\n            </div>\n        );\n    }\n}\n\nexport default StudentChart;\n","import React from \"react\";\nimport { Layout, Table, Tag, Row, Col, Card, List, Typography } from 'antd';\nimport Sidebar from \"../common/Sidebar\";\nimport CredentialsChart from \"../../charts/CredentialsChart\";\nimport SemesterChart from \"../../charts/SemesterChart\";\nimport CoursesChart from \"../../charts/CoursesChart\";\nimport StudentChart from \"../../charts/StudentsChart\"\n\nconst { Header, Footer } = Layout;\n\n\nconst data = [];\n\nclass Home extends React.Component {\n    render() {\n        return (\n            <Layout style={{ minHeight: '100vh' }}>\n                <Sidebar />\n                <Layout>\n                    <Header style={{ background: '#fff', padding: 0 }} />\n\n\n                    <div style={{ background: '#ECECEC', padding: '30px', marginTop: \"20px\" }}>\n                        <Row gutter={16}>\n                            <Col span={6}>\n                                <Card title=\"Students\" bordered={false}>\n                                    <StudentChart />\n                                </Card>\n                            </Col>\n                            <Col span={6}>\n                                <Card title=\"Courses\" bordered={false}>\n                                    <CoursesChart />\n                                </Card>\n                            </Col>\n                            <Col span={6}>\n                                <Card title=\"Credentials\" bordered={false}>\n                                    <CredentialsChart />\n                                </Card>\n                            </Col>\n                            <Col span={6}>\n                                <Card title=\"Semesters\" bordered={false}>\n                                    <SemesterChart />\n                                </Card>\n                            </Col>\n                        </Row>\n                    </div>\n\n                    <div style={{ background: '#ECECEC', padding: '30px', marginTop: \"20px\" }}>\n                        <Row gutter={16}>\n                            <Card title=\"QuickLinks\" bordered={false} style={{ font: 'bold' }}>\n                                <Col span={8}>\n                                    <h2>\n                                        Student Detail\n                                    </h2>\n                                </Col>\n                                <Col span={8}>\n                                    <h2>\n                                        Course Detail\n                                    </h2>\n                                </Col>\n                                <Col span={8}>\n                                    <h2>\n                                        Credentials Detail\n                                    </h2>\n                                </Col>\n                            </Card>\n\n                        </Row>\n                    </div>\n\n                    <Footer style={{ textAlign: 'center' }}>Hoola Tech ©2019</Footer>\n\n                </Layout>\n            </Layout>\n        );\n    }\n}\n\nexport default Home;","import React from 'react';\n\n// React Router packages\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\n// import components\nimport Course from './components/course/Course';\nimport CourseDetail from './components/course/CourseDetail';\nimport School from \"./components/school/School\";\nimport Student from \"./components/student/Student\";\nimport Home from \"./components/home/Home\";\n\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {}\n  }\n\n  render() {\n    return (\n      // <Course />\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/coursedetail\" component={CourseDetail} />\n          <Route path=\"/school\" component={School} />\n          <Route path=\"/student\" component={Student} />\n          <Route path=\"/course\" component={Course} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}